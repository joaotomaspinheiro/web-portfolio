import { useEffect } from "react";
import Head from "next/head";
import { setColorScheme, setSelectedRoute } from "@redux/actions";
import { useAppDispatch, useAppSelector } from "@redux/hooks";
import Navbar from "@components/Navbar";
import Main from "@components/sections/Main";
import About from "@components/sections/About";
import Projects from "@components/sections/Projects";
import Contact from "@components/sections/Contact";
import styles from "@styles/Home.module.scss";
import { ColorScheme, DarkScheme, LightScheme } from "@utils/colorSchemes";
import { Routes } from "@utils/enums";

export default function Home() {
  const colorScheme = useAppSelector(
    (state) => state.colorScheme
  ) as ColorScheme;
  const dispatch = useAppDispatch();

  useEffect(() => {
    let observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            switch (entry.target.id) {
              case Routes[Routes.MAIN]:
                dispatch(setSelectedRoute(Routes.MAIN));
                dispatch(setColorScheme(LightScheme));
                break;
              case Routes[Routes.ABOUT]:
                dispatch(setSelectedRoute(Routes.ABOUT));
                dispatch(setColorScheme(DarkScheme));
                break;
              case Routes[Routes.PROJECTS]:
                dispatch(setSelectedRoute(Routes.PROJECTS));
                dispatch(setColorScheme(LightScheme));
                break;
              case Routes[Routes.CONTACT]:
                dispatch(setSelectedRoute(Routes.CONTACT));
                dispatch(setColorScheme(DarkScheme));
                break;
              default:
                break;
            }
          }
        });
      },
      { threshold: 1 }
    );

    document
      .querySelectorAll("section")
      .forEach((section) => observer.observe(section));
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Jo√£o Pinheiro Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <style jsx global>
        {`
          html {
            scrollbar-color: ${colorScheme.accent} ${colorScheme.background};
          }
          body {
            background: ${colorScheme.background};
          }
          * {
            color: ${colorScheme.text}
          }
          *::selection {
            background-color: ${colorScheme.accent};
          }
          *::-webkit-scrollbar-track {
            background: ${colorScheme.background};
          }
        `}
      </style>
      <main className={styles.main}>
        <Main />
        <About />
        <Projects />
        <Contact />
      </main>
      <Navbar />
    </div>
  );
}
